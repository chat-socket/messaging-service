apiVersion: apps/v1
kind: Deployment
metadata:
  name: messaging-service
  labels:
    app: messaging-service
spec:
  selector:
    matchLabels:
      app: messaging-service
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: messaging-service
    spec:
      containers:
        - name: messaging-service
          image: 'messaging-service:v1'
          ports:
            - containerPort: 8080
          env:
            - name: JAVA_OPTS
              value: "-Xmx64m -Xms32m -Xss256k -XX:CompressedClassSpaceSize=32m -XX:-TieredCompilation"
            - name: ARTEMIS_URI
              value: "tcp://artemis-server:61616"
          lifecycle:
            preStop:
              exec:
                command: [ "sh", "-c", "sleep 10" ]
          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/readiness
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/liveness
          resources:
            requests:
              memory: "200Mi"
              cpu: "500m"
            limits:
              memory: "200Mi"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - messaging-service
                topologyKey: kubernetes.io/chat-microservices
